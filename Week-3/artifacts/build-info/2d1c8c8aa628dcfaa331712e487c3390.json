{
	"id": "2d1c8c8aa628dcfaa331712e487c3390",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Week-3/destructorFunction.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract destructorFunction{\n    address payable owner;\n    // The self-destruct function is used to destroy a contract and transfer any remaining Ether to a specified address.\n    // It helps to clean up the blockchain by removing unnecessary contract code and releasing funds.\n\n    constructor() {\n        owner = payable(msg.sender);\n    }\n\n    receive() external payable {} // added for the contract to directly receive funds\n    \n    // Example destructor function\n    function close() public {\n        require(msg.sender == owner, \"Only the contract owner can call this function\");\n        selfdestruct(owner);\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Week-3/destructorFunction.sol": {
				"destructorFunction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "close",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Week-3/destructorFunction.sol\":58:683  contract destructorFunction{... */\n  mstore(0x40, 0x80)\n    /* \"Week-3/destructorFunction.sol\":342:400  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Week-3/destructorFunction.sol\":382:392  msg.sender */\n  caller\n    /* \"Week-3/destructorFunction.sol\":366:371  owner */\n  0x00\n  dup1\n    /* \"Week-3/destructorFunction.sol\":366:393  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Week-3/destructorFunction.sol\":58:683  contract destructorFunction{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Week-3/destructorFunction.sol\":58:683  contract destructorFunction{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x43d726d6\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Week-3/destructorFunction.sol\":532:680  function close() public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      pop\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      stop\n    tag_8:\n        /* \"Week-3/destructorFunction.sol\":588:593  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Week-3/destructorFunction.sol\":574:593  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Week-3/destructorFunction.sol\":574:584  msg.sender */\n      caller\n        /* \"Week-3/destructorFunction.sol\":574:593  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Week-3/destructorFunction.sol\":566:644  require(msg.sender == owner, \"Only the contract owner can call this function\") */\n      tag_10\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_11\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_10:\n        /* \"Week-3/destructorFunction.sol\":667:672  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Week-3/destructorFunction.sol\":654:673  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"#utility.yul\":7:176   */\n    tag_13:\n        /* \"#utility.yul\":91:102   */\n      0x00\n        /* \"#utility.yul\":125:131   */\n      dup3\n        /* \"#utility.yul\":120:123   */\n      dup3\n        /* \"#utility.yul\":113:132   */\n      mstore\n        /* \"#utility.yul\":165:169   */\n      0x20\n        /* \"#utility.yul\":160:163   */\n      dup3\n        /* \"#utility.yul\":156:170   */\n      add\n        /* \"#utility.yul\":141:170   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:176   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":182:415   */\n    tag_14:\n        /* \"#utility.yul\":322:356   */\n      0x4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":310:316   */\n      dup3\n        /* \"#utility.yul\":306:320   */\n      add\n        /* \"#utility.yul\":299:357   */\n      mstore\n        /* \"#utility.yul\":391:407   */\n      0x20746869732066756e6374696f6e000000000000000000000000000000000000\n        /* \"#utility.yul\":386:388   */\n      0x20\n        /* \"#utility.yul\":378:384   */\n      dup3\n        /* \"#utility.yul\":374:389   */\n      add\n        /* \"#utility.yul\":367:408   */\n      mstore\n        /* \"#utility.yul\":182:415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":421:787   */\n    tag_15:\n        /* \"#utility.yul\":563:566   */\n      0x00\n        /* \"#utility.yul\":584:651   */\n      tag_20\n        /* \"#utility.yul\":648:650   */\n      0x2e\n        /* \"#utility.yul\":643:646   */\n      dup4\n        /* \"#utility.yul\":584:651   */\n      tag_13\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":577:651   */\n      swap2\n      pop\n        /* \"#utility.yul\":660:753   */\n      tag_21\n        /* \"#utility.yul\":749:752   */\n      dup3\n        /* \"#utility.yul\":660:753   */\n      tag_14\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":778:780   */\n      0x40\n        /* \"#utility.yul\":773:776   */\n      dup3\n        /* \"#utility.yul\":769:781   */\n      add\n        /* \"#utility.yul\":762:781   */\n      swap1\n      pop\n        /* \"#utility.yul\":421:787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":793:1212   */\n    tag_12:\n        /* \"#utility.yul\":959:963   */\n      0x00\n        /* \"#utility.yul\":997:999   */\n      0x20\n        /* \"#utility.yul\":986:995   */\n      dup3\n        /* \"#utility.yul\":982:1000   */\n      add\n        /* \"#utility.yul\":974:1000   */\n      swap1\n      pop\n        /* \"#utility.yul\":1046:1055   */\n      dup2\n        /* \"#utility.yul\":1040:1044   */\n      dup2\n        /* \"#utility.yul\":1036:1056   */\n      sub\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1021:1030   */\n      dup4\n        /* \"#utility.yul\":1017:1034   */\n      add\n        /* \"#utility.yul\":1010:1057   */\n      mstore\n        /* \"#utility.yul\":1074:1205   */\n      tag_23\n        /* \"#utility.yul\":1200:1204   */\n      dup2\n        /* \"#utility.yul\":1074:1205   */\n      tag_15\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":1066:1205   */\n      swap1\n      pop\n        /* \"#utility.yul\":793:1212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204d368c41b844512a537726765f168370fbf523d9cb6e75bead089462554846f064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101e5806100606000396000f3fe6080604052600436106100225760003560e01c806343d726d61461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b50610043610045565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ca9061018f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600082825260208201905092915050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610179602e8361010c565b91506101848261011d565b604082019050919050565b600060208201905081810360008301526101a88161016c565b905091905056fea26469706673582212204d368c41b844512a537726765f168370fbf523d9cb6e75bead089462554846f064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1E5 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x2E JUMPI PUSH2 0x29 JUMP JUMPDEST CALLDATASIZE PUSH2 0x29 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E65722063616E2063616C6C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746869732066756E6374696F6E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179 PUSH1 0x2E DUP4 PUSH2 0x10C JUMP JUMPDEST SWAP2 POP PUSH2 0x184 DUP3 PUSH2 0x11D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8 DUP2 PUSH2 0x16C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CALLDATASIZE DUP13 COINBASE 0xB8 DIFFICULTY MLOAD 0x2A MSTORE8 PUSH24 0x26765F168370FBF523D9CB6E75BEAD089462554846F06473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "58:625:0:-:0;;;342:58;;;;;;;;;;382:10;366:5;;:27;;;;;;;;;;;;;;;;;;58:625;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@close_35": {
									"entryPoint": 69,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1215:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "103:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "141:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "165:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "156:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "91:11:1",
														"type": ""
													}
												],
												"src": "7:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "288:127:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "318:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:1"
																	},
																	{
																		"hexValue": "4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "322:34:1",
																		"type": "",
																		"value": "Only the contract owner can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "299:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "299:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "378:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "374:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "374:15:1"
																	},
																	{
																		"hexValue": "20746869732066756e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "391:16:1",
																		"type": "",
																		"value": " this function"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "367:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "367:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "367:41:1"
														}
													]
												},
												"name": "store_literal_in_memory_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "280:6:1",
														"type": ""
													}
												],
												"src": "182:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "567:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "577:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "643:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "648:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "584:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "749:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
																	"nodeType": "YulIdentifier",
																	"src": "660:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "660:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "762:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "773:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "778:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "555:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "563:3:1",
														"type": ""
													}
												],
												"src": "421:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "964:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "974:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "986:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "982:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "974:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1021:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1032:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1017:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1017:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1040:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1010:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1066:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1200:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1074:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1066:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "944:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "959:4:1",
														"type": ""
													}
												],
												"src": "793:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the contract owner can call\")\n\n        mstore(add(memPtr, 32), \" this function\")\n\n    }\n\n    function abi_encode_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100225760003560e01c806343d726d61461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b50610043610045565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ca9061018f565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b600082825260208201905092915050565b7f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610179602e8361010c565b91506101848261011d565b604082019050919050565b600060208201905081810360008301526101a88161016c565b905091905056fea26469706673582212204d368c41b844512a537726765f168370fbf523d9cb6e75bead089462554846f064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x2E JUMPI PUSH2 0x29 JUMP JUMPDEST CALLDATASIZE PUSH2 0x29 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x45 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA SWAP1 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520636F6E7472616374206F776E65722063616E2063616C6C PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20746869732066756E6374696F6E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179 PUSH1 0x2E DUP4 PUSH2 0x10C JUMP JUMPDEST SWAP2 POP PUSH2 0x184 DUP3 PUSH2 0x11D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A8 DUP2 PUSH2 0x16C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4D CALLDATASIZE DUP13 COINBASE 0xB8 DIFFICULTY MLOAD 0x2A MSTORE8 PUSH24 0x26765F168370FBF523D9CB6E75BEAD089462554846F06473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "58:625:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;532:148;;;;;;;;;;;;;:::i;:::-;;;588:5;;;;;;;;;;574:19;;:10;:19;;;566:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;667:5;;;;;;;;;;654:19;;;7:169:1;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:233::-;322:34;318:1;310:6;306:14;299:58;391:16;386:2;378:6;374:15;367:41;182:233;:::o;421:366::-;563:3;584:67;648:2;643:3;584:67;:::i;:::-;577:74;;660:93;749:3;660:93;:::i;:::-;778:2;773:3;769:12;762:19;;421:366;;;:::o;793:419::-;959:4;997:2;986:9;982:18;974:26;;1046:9;1040:4;1036:20;1032:1;1021:9;1017:17;1010:47;1074:131;1200:4;1074:131;:::i;:::-;1066:139;;793:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "97000",
								"executionCost": "24413",
								"totalCost": "121413"
							},
							"external": {
								"close()": "32022"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 683,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 400,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 342,
									"end": 400,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 342,
									"end": 400,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 342,
									"end": 400,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 382,
									"end": 392,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 366,
									"end": 371,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 371,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 366,
									"end": 393,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 366,
									"end": 393,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 366,
									"end": 393,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 366,
									"end": 393,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 683,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 683,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 683,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 683,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 683,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 683,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204d368c41b844512a537726765f168370fbf523d9cb6e75bead089462554846f064736f6c63430008110033",
									".code": [
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "43D726D6"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 683,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 532,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 532,
											"end": 680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 532,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 532,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 532,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 532,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 532,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 588,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 593,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 588,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 588,
											"end": 593,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 588,
											"end": 593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 588,
											"end": 593,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 588,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 588,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 574,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 574,
											"end": 584,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 574,
											"end": 593,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 574,
											"end": 593,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 574,
											"end": 593,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 566,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 566,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 566,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 667,
											"end": 672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 673,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 654,
											"end": 673,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 654,
											"end": 673,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 91,
											"end": 102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 120,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 113,
											"end": 132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 165,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 160,
											"end": 163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 156,
											"end": 170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 415,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 182,
											"end": 415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 322,
											"end": 356,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C792074686520636F6E7472616374206F776E65722063616E2063616C6C"
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 306,
											"end": 320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 299,
											"end": 357,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 391,
											"end": 407,
											"name": "PUSH",
											"source": 1,
											"value": "20746869732066756E6374696F6E000000000000000000000000000000000000"
										},
										{
											"begin": 386,
											"end": 388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 378,
											"end": 384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 374,
											"end": 389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 367,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 182,
											"end": 415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 182,
											"end": 415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 421,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 563,
											"end": 566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 648,
											"end": 650,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 584,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 584,
											"end": 651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 584,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 584,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 577,
											"end": 651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 577,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 749,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 660,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 660,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 660,
											"end": 753,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 660,
											"end": 753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 769,
											"end": 781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 762,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 762,
											"end": 781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 421,
											"end": 787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 959,
											"end": 963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1021,
											"end": 1030,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1200,
											"end": 1204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1074,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1074,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1066,
											"end": 1205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 793,
											"end": 1212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Week-3/destructorFunction.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"close()": "43d726d6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Week-3/destructorFunction.sol\":\"destructorFunction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Week-3/destructorFunction.sol\":{\"keccak256\":\"0x47ff81877c5383bb85e01cac386a102c863c8c803b58361f1a96e05e858354ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbebc43ca3cac06962b50d2666143f1370c95f07547c02f181f5b312f14f29ed\",\"dweb:/ipfs/QmP4cVGMQmxUCheUWog3c9PUEFBAWxJtYL1nu6S9evDbVU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Week-3/destructorFunction.sol:destructorFunction",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Week-3/destructorFunction.sol": {
				"ast": {
					"absolutePath": "Week-3/destructorFunction.sol",
					"exportedSymbols": {
						"destructorFunction": [
							36
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "destructorFunction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36
							],
							"name": "destructorFunction",
							"nameLocation": "67:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "107:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "91:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "91:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "356:44:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "366:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "382:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "386:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "382:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "374:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 7,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "374:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "374:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "366:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "366:27:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "353:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "356:0:0"
									},
									"scope": 36,
									"src": "342:58:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "433:2:0",
										"statements": []
									},
									"id": 19,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "433:0:0"
									},
									"scope": 36,
									"src": "406:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "556:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 23,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "574:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "578:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "574:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 25,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "588:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "574:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "595:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
																"typeString": "literal_string \"Only the contract owner can call this function\""
															},
															"value": "Only the contract owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6106cd0471486a8111f375c8ae6231194de2c6708d204ba703cd25c6dc50495c",
																"typeString": "literal_string \"Only the contract owner can call this function\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "566:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "566:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "566:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "667:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 30,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "654:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "654:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "654:19:0"
											}
										]
									},
									"functionSelector": "43d726d6",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "close",
									"nameLocation": "541:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "556:0:0"
									},
									"scope": 36,
									"src": "532:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 37,
							"src": "58:625:0",
							"usedErrors": []
						}
					],
					"src": "32:651:0"
				},
				"id": 0
			}
		}
	}
}